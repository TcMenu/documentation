name: Documentation

on:
  push:
    branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

# Default to bash
defaults:
  run:
    shell: bash

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      HUGO_VERSION: 0.129.0
    steps:
      - name: Install Hugo CLI
        run: |
          wget -O ${{ runner.temp }}/hugo.deb https://github.com/gohugoio/hugo/releases/download/v${HUGO_VERSION}/hugo_extended_${HUGO_VERSION}_linux-amd64.deb \
          && sudo dpkg -i ${{ runner.temp }}/hugo.deb
      - name: Install Dart Sass and Doxygen
        run: |
          sudo snap install dart-sass
          sudo apt-add-repository universe
          sudo apt-get update
          sudo apt-get install doxygen
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: recursive
      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v5
      - name: Install Node.js dependencies
        run: "[[ -f package-lock.json || -f npm-shrinkwrap.json ]] && npm ci || true"
      - name: Build with Hugo
        env:
          HUGO_CACHEDIR: ${{ runner.temp }}/hugo_cache
          HUGO_ENVIRONMENT: production
        run: |
          sed -i 's/production = .N./production = "Y"/g' config.toml
          hugo \
            --minify \
            --baseURL "${{ steps.pages.outputs.base_url }}"
      - name: Checkout TcMenuLib
        uses: actions/checkout@v4
        with:
          repository: "TcMenu/tcMenuLib"
          path: "tcMenuLib"
      - name: Build TcMenuLib Docs
        working-directory: ./tcMenuLib
        env:
          DOXY_DIR: ../_refdocs/
        run: |
          mkdir -p ../public/ref-docs/tcmenu
          doxygen ../_refdocs/tcmenu-doxygen.conf
      - name: Checkout IoAbstraction
        uses: actions/checkout@v4
        with:
          repository: "TcMenu/IoAbstraction"
          path: "IoAbstraction"
      - name: Build IoAbstraction Docs
        working-directory: ./IoAbstraction
        env:
          DOXY_DIR: ../_refdocs/
        run: |
          mkdir -p ../public/ref-docs/ioabstraction
          doxygen ../_refdocs/ioa-doxygen.conf
      - name: Checkout TaskManagerIO
        uses: actions/checkout@v4
        with:
          repository: "TcMenu/TaskManagerIO"
          path: "TaskManagerIO"
      - name: Build TaskManagerIO Docs
        working-directory: ./TaskManagerIO
        env:
          DOXY_DIR: ../_refdocs/
        run: |
          mkdir -p ../public/ref-docs/taskmanagerio
          doxygen ../_refdocs/taskmgr-doxygen.conf
      - name: Checkout tcUnicodeHelper
        uses: actions/checkout@v4
        with:
          repository: "TcMenu/tcUnicodeHelper"
          path: "tcUnicodeHelper"
      - name: Build tcUnicodeHelper Docs
        working-directory: ./tcUnicodeHelper
        env:
          DOXY_DIR: ../_refdocs/
        run: |
          mkdir -p ../public/ref-docs/tc-unicode-helper
          doxygen ../_refdocs/tc-unicode-helper.conf
      - name: Checkout SimpleCollections
        uses: actions/checkout@v4
        with:
          repository: "TcMenu/SimpleCollections"
          path: "SimpleCollections"
      - name: Build SimpleCollections Docs
        working-directory: ./SimpleCollections
        env:
          DOXY_DIR: ../_refdocs/
        run: |
          mkdir -p ../public/ref-docs/simple-collections
          doxygen ../_refdocs/simple-collections.conf
      - name: Checkout LiquidCrystalIO
        uses: actions/checkout@v4
        with:
          repository: "TcMenu/LiquidCrystalIO"
          path: "LiquidCrystalIO"
      - name: Build LiquidCrystalIO Docs
        working-directory: ./LiquidCrystalIO
        env:
          DOXY_DIR: ../_refdocs/
        run: |
          mkdir -p ../public/ref-docs/liquidcrystalio
          doxygen ../_refdocs/liquidio-doxygen.conf
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./public

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
